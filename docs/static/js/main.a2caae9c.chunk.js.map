{"version":3,"sources":["redux/utils/redux-map.js","redux/actions.js","redux/utils/action-utils.js","redux/reducers.js","redux/store.js","components/App.js","index.js"],"names":["reducerMap","this","actionsToReducers","initialState","actionFn","reducer","actionName","name","reducers","length","startState","action","getReducersForAction","reduce","state","type","console","log","map","addActionTypes","obj","property","origAction","newFunction","args","result","Object","defineProperty","value","configurable","init","onClick","event","Actions","clickedOn","Date","target","rootReducer","middlewareEnhancer","applyMiddleware","store","next","getState","thunkMiddleware","createStore","composeWithDevTools","dispatch","connect","className","e","rootElement","document","getElementById","ReactDOM","render","steps","currentStepIndex","intervalId","setInterval","clearInterval"],"mappings":"yMAgCMA,EAAa,IAhCnB,WACE,aAAe,oBACbC,KAAKC,kBAAoB,GACzBD,KAAKE,aAAe,GAHxB,uCAME,SAAIC,EAAUC,GACZ,IAAIC,EAAkC,oBAAbF,EAA2BA,EAASG,KAAOH,EAC/DH,KAAKC,kBAAkBI,KAC1BL,KAAKC,kBAAkBI,GAAc,IAEvC,IAAIE,EAAWP,KAAKC,kBAAkBI,GACtCE,EAASA,EAASC,QAAUJ,IAZhC,oBAeE,SAAOK,EAAYC,GACjB,OAAOV,KAAKW,qBAAqBD,GAAQE,QAAO,SAACC,EAAOT,GAAR,OAC5CA,EAAQS,EAAOH,KAASD,KAjBhC,kCAoBE,SAAqBC,GACnB,IAAII,EAAOJ,EAAOI,KACdP,EAAWP,KAAKC,kBAAkBa,GACtC,OAAIP,IAGFQ,QAAQC,IAAR,+BAAoCF,IAC7B,QA3Bb,MAkCaG,EAAM,SAACd,EAAUC,GAC5BL,EAAWkB,IAAId,EAAUC,I,SCjCZc,ECFe,SAAAC,GAAQ,IAAD,WACxBC,GACT,IAAMC,EAAaF,EAAIC,GAEjBE,EAAc,SAACC,GACnB,IAAMC,EAASH,EAAWE,GAE1B,OADAC,EAAOV,KAAOM,EACPI,GAGTC,OAAOC,eAAeJ,EAAa,OAAQ,CAACK,MAAOP,EAAUQ,cAAc,IAC3ET,EAAIC,GAAYE,GAVlB,IAAK,IAAMF,KAAYD,EAAM,EAAlBC,GAaX,OAAOD,EDZMD,CAAe,CAC5BW,KAAM,iBAAO,IACbC,QAAS,SAAAC,GAAK,MAAK,CACjBA,MAAOA,MEgBXd,EAAIe,EAAQH,MAVC,SAAChB,EAAOH,GAEnB,OADAK,QAAQC,IAAI,SACLH,KASTI,EAAIe,EAAQF,SANI,SAACjB,EAAOH,GAAR,mBAAC,eACZG,GADW,IAEdoB,UAAW,uBAAyB,IAAIC,KAAS,SAAWxB,EAAOqB,MAAMI,OAAO7B,UAM3E,IAAM8B,EHcN,WAA2D,IAA1CvB,EAAyC,uDAAjCd,EAAWG,aAAcQ,EAAQ,uCAC/D,OAAOX,EAAWa,OAAOC,EAAOH,I,QI1B5B2B,EAAqBC,2BAPd,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAA9B,GAC5BK,QAAQC,IAAI,mBAAoBN,GAChC,IAAIc,EAASgB,EAAK9B,GAElB,OADAK,QAAQC,IAAI,kBAAmBuB,EAAME,YAC9BjB,MAGwCkB,KAC3CH,EAAQI,sBAAYP,EDPE,CAC1BH,UAAW,wBCMwCW,8BAAoBP,IAEzEE,EAAMM,SAASb,EAAQH,QAERU,Q,eCFAO,eAJS,SAAAjC,GAAK,MAAK,CAChCoB,UAAWpB,EAAMoB,aAKjB,CACEH,QAASE,EAAQF,SAHNgB,EAZH,SAAC,GAAD,IAAEb,EAAF,EAAEA,UAAWH,EAAb,EAAaA,QAAb,OACV,sBAAKiB,UAAU,MAAf,oBACUd,EACR,sBACA,wBAAQ3B,KAAK,aAAawB,QAAS,SAAAkB,GAAC,OAAIlB,EAAQkB,IAAhD,yBCEEC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACL,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJU,GAGJ,IAAMK,EAAQ,GACVC,EAAmB,EAUnBC,EAAaC,aAAY,WARrBF,EAAmBD,EAAM9C,SACzBO,QAAQC,IAAIsC,EAAMC,IAClBhB,EAAMM,SAASS,EAAMC,MACrBA,IACAG,cAAcF,MAIwB,M","file":"static/js/main.a2caae9c.chunk.js","sourcesContent":["export class ReducerMap {\n  constructor() {\n    this.actionsToReducers = {}\n    this.initialState = {}\n  }\n\n  map(actionFn, reducer) {\n    let actionName = (typeof actionFn === 'function') ? actionFn.name : actionFn\n    if (!this.actionsToReducers[actionName]) {\n      this.actionsToReducers[actionName] = [];\n    }\n    let reducers = this.actionsToReducers[actionName];\n    reducers[reducers.length] = reducer;\n  }\n\n  reduce(startState, action) {\n    return this.getReducersForAction(action).reduce((state, reducer) =>\n        reducer(state, action), startState);\n  }\n\n  getReducersForAction(action) {\n    let type = action.type;\n    let reducers = this.actionsToReducers[type];\n    if (reducers) {\n      return reducers;\n    } else {\n      console.log(`No reducer found for ${type}`)\n      return [];\n    }\n  }\n}\n\nconst reducerMap = new ReducerMap();\n\nexport const map = (actionFn, reducer) => {\n  reducerMap.map(actionFn, reducer);\n}\n\nexport function reducer(state = reducerMap.initialState, action) {\n  return reducerMap.reduce(state, action);\n}\n\n","import { addActionTypes } from \"./utils/action-utils\"\n\nexport default addActionTypes({\n  init: () => ({}),\n  onClick: event => ({\n    event: event\n  })\n})\n\n","export const addActionTypes = obj => {\n  for (const property in obj) {\n    const origAction = obj[property]\n\n    const newFunction = (args) => {\n      const result = origAction(args)\n      result.type = property\n      return result;\n    }\n\n    Object.defineProperty(newFunction, 'name', {value: property, configurable: true});\n    obj[property] = newFunction\n  }\n\n  return obj\n}\n","import { map, reducer } from \"./utils/redux-map\";\nimport {\n} from \"./mutators\"\nimport {\n} from \"../selectors/selectors\"\nimport Actions from \"./actions\"\n\nexport const initialState = {\n  clickedOn: \"Why not click a bit?\"\n}\n\nconst init = (state, action) => {\n  console.log(\"init!\")\n  return state\n}\n\nconst onClick = (state, action) => ({\n  ...state,\n  clickedOn: \"You last clicked on \" + new Date() + \" from \" + action.event.target.name\n})\n\nmap(Actions.init, init)\nmap(Actions.onClick, onClick)\n\nexport const rootReducer = reducer\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { rootReducer, initialState } from \"./reducers\";\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport Actions from \"./actions\"\n\nconst funk = store => next => action => {\n  console.log('XXX, dispatching', action)\n  let result = next(action)\n  console.log('XXX, next state', store.getState())\n  return result\n}\n\nconst middlewareEnhancer = applyMiddleware(funk, thunkMiddleware)\nconst store = createStore(rootReducer, initialState, composeWithDevTools(middlewareEnhancer))\n\nstore.dispatch(Actions.init());\n\nexport default store\n","import '../main.css'\nimport Actions from \"../redux/actions\"\nimport {connect} from \"react-redux\";\n\nconst App = ({clickedOn, onClick}) => (\n  <div className=\"App\">\n    Hello. {clickedOn}\n    <p/>\n    <button name=\"Mr. Clicky\" onClick={e => onClick(e)}>Click</button>\n  </div>\n)\n\nconst mapStateToProps = state => ({\n  clickedOn: state.clickedOn\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    onClick: Actions.onClick\n    // actions\n  }\n)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport App from './components/App'\n\nimport {\n} from \"./redux/actions\";\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    rootElement\n)\n\nconst steps = []\nlet currentStepIndex = 0;\nlet runStep = () => {\n    if (currentStepIndex < steps.length) {\n        console.log(steps[currentStepIndex])\n        store.dispatch(steps[currentStepIndex]());\n        currentStepIndex++;\n        clearInterval(intervalId);\n    }\n}\n\nlet intervalId = setInterval(() => runStep(), 100)\n\n\n\n"],"sourceRoot":""}